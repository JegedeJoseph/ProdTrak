import{initializeApp as C}from"https://www.gstatic.com/firebasejs/12.1.0/firebase-app.js";import{getAuth as S,onAuthStateChanged as A,createUserWithEmailAndPassword as $,signInWithEmailAndPassword as P,signOut as N}from"https://www.gstatic.com/firebasejs/12.1.0/firebase-auth.js";import{getFirestore as U,query as B,collection as y,where as x,orderBy as w,getDocs as T,addDoc as O,serverTimestamp as M,onSnapshot as R,doc as b,updateDoc as H,deleteDoc as q}from"https://www.gstatic.com/firebasejs/12.1.0/firebase-firestore.js";(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))a(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function t(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function a(o){if(o.ep)return;o.ep=!0;const s=t(o);fetch(o.href,s)}})();const z={apiKey:"AIzaSyAg-SOTza5s7RPXTARsUa1DqU0UTG1MVOg",authDomain:"todo-app-f0b27.firebaseapp.com",projectId:"todo-app-f0b27",storageBucket:"todo-app-f0b27.firebasestorage.app",messagingSenderId:"193322568260",appId:"1:193322568260:web:12356785e93cf222f18a11",measurementId:"G-CG33WLLSMJ"},D=C(z),g=U(D),l=S(D),k=document.getElementById("auth-container"),E=document.getElementById("welcome-container"),I=document.getElementById("app-container"),F=document.getElementById("goToAppButton"),j=document.getElementById("loginButton"),V=document.getElementById("signupButton"),G=document.getElementById("logoutButton"),W=document.getElementById("user-email"),f=document.getElementById("auth-error"),Y=document.getElementById("sendEmailButton");A(l,async e=>{e?(console.log("User is logged in:",e),k.classList.add("hidden"),E.classList.remove("hidden"),I.classList.add("hidden"),W.textContent=e.email||e.displayName,K(e)):(console.log("User is signed out"),k.classList.remove("hidden"),E.classList.add("hidden"),I.classList.add("hidden"),document.getElementById("taskList").innerHTML="")});F.addEventListener("click",()=>{E.classList.add("hidden"),I.classList.remove("hidden")});V.addEventListener("click",async()=>{const e=document.getElementById("email").value,n=document.getElementById("password").value;f.textContent="";try{const t=await $(l,e,n);console.log("Signed up:",t.user)}catch(t){f.textContent=t.message,console.error("Error signing up:",t)}});j.addEventListener("click",async()=>{const e=document.getElementById("email").value,n=document.getElementById("password").value;f.textContent="";try{const t=await P(l,e,n);console.log("Logged in:",t.user)}catch(t){f.textContent=t.message,console.error("Error logging in:",t)}});G.addEventListener("click",async()=>{try{await N(l),console.log("User signed out")}catch(e){console.error("Error signing out:",e)}});Notification.requestPermission();Y.addEventListener("click",async()=>{const e=l.currentUser;if(!e){alert("You must be logged in.");return}const n=document.getElementById("supervisorEmail").value;if(!n){alert("Please enter your supervisor's email address.");return}const t=B(y(g,"tasks"),x("userId","==",e.uid),w("createdAt","desc")),a=await T(t);if(a.empty){alert("You have no tasks to send.");return}const o={"In Progress":[],"Not Started":[],Completed:[]};a.forEach(v=>{const u=v.data();o[u.status]&&o[u.status].push(u)});const s=luxon.DateTime.now().toLocaleString(luxon.DateTime.DATE_FULL);let i=`Dear Supervisor,

Please find my task report for today, ${s}.

`;const d=(v,u)=>{if(u.length===0)return"";let m=`--- ${v.toUpperCase()} ---

`;return u.forEach(p=>{const L=luxon.DateTime.fromISO(p.dueDate).toLocaleString(luxon.DateTime.DATETIME_SHORT);m+=`â€¢ Task: ${p.title}
`,m+=`  - Priority: ${p.priority}
`,m+=`  - Due: ${L}
`,p.deliverable&&(m+=`  - Deliverable: ${p.deliverable}
`),m+=`
`}),m};i+=d("In Progress",o["In Progress"]),i+=d("Not Started",o["Not Started"]),i+=d("Completed",o.Completed),i+=`Thank you.

Best regards,
`+e.email;const r=`Daily Task Report for ${s} - ${e.email}`,c=`mailto:${n}?subject=${encodeURIComponent(r)}&body=${encodeURIComponent(i)}`;window.location.href=c});window.addTask=async function(){const n=l.currentUser;if(!n){alert("You must be logged in to add a task.");return}const t=document.getElementById("taskTitle").value,a=document.getElementById("taskDescription").value,o=document.getElementById("taskDeliverable").value,s=document.getElementById("taskPriority").value,i=document.getElementById("taskCategory").value,d=document.getElementById("taskDueDate").value,r=document.getElementById("taskAssignedBy").value;if(!t||!d){alert("Title and Due Date are required!");return}try{await O(y(g,"tasks"),{userId:n.uid,title:t,description:a,deliverable:o,priority:s,category:i,dueDate:d,assignedBy:r,status:"Not Started",createdAt:M()}),document.getElementById("taskTitle").value="",document.getElementById("taskDescription").value="",document.getElementById("taskDeliverable").value="",document.getElementById("taskDueDate").value="",document.getElementById("taskAssignedBy").value="",J(d,t)}catch(c){console.error("Error adding task:",c),alert("Failed to add task. Check console for details.")}};async function _(e){if(!e)return;const n=document.getElementById("taskList");n.innerHTML="";let t=0,a=0,o=0;const s=B(y(g,"tasks"),x("userId","==",e.uid),w("createdAt","desc")),i=await T(s);i.empty&&(n.innerHTML='<p class="text-slate-500 text-center py-4">No tasks yet. Add one to get started!</p>'),i.forEach(d=>{const r=d.data();t++,r.status==="Completed"&&a++,r.status==="In Progress"&&o++;const c=document.createElement("div");c.className="p-4 border border-slate-200 rounded-lg transition-shadow hover:shadow-md",c.innerHTML=`
        <div class="flex flex-col sm:flex-row justify-between sm:items-center">
          <div class="flex-grow">
            <div class="flex items-center mb-2">
              ${X(r.priority)}
              <h3 class="font-bold text-lg text-slate-800">${r.title}</h3>
            </div>
            <p class="text-slate-600 text-sm mb-2">${r.description||"No description"}</p>
            <div class="flex flex-wrap gap-x-4 gap-y-1 text-xs text-slate-500">
              <p><strong>Deliverable:</strong> ${r.deliverable||"None"}</p>
              <p><strong>Category:</strong> ${r.category}</p>
              <p><strong>Assigned By:</strong> ${r.assignedBy||"N/A"}</p>
              <p><strong>Due:</strong> ${luxon.DateTime.fromISO(r.dueDate).toLocaleString(luxon.DateTime.DATETIME_SHORT)}</p>
            </div>
          </div>
          <div class="flex items-center space-x-2 mt-4 sm:mt-0">
            <select onchange="updateStatus('${d.id}', this.value)" class="w-full sm:w-auto text-sm p-2 border border-slate-300 rounded-md focus:ring-2 focus:ring-indigo-500 transition">
              <option value="Not Started" ${r.status==="Not Started"?"selected":""}>Not Started</option>
              <option value="In Progress" ${r.status==="In Progress"?"selected":""}>In Progress</option>
              <option value="Completed" ${r.status==="Completed"?"selected":""}>Completed</option>
            </select>
            <button onclick="deleteTask('${d.id}')" class="text-slate-500 hover:text-red-600 p-2 rounded-md transition-colors">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" /></svg>
            </button>
          </div>
        </div>
      `,n.appendChild(c)}),document.getElementById("totalTasks").textContent=t,document.getElementById("inProgressTasks").textContent=o,document.getElementById("completedTasks").textContent=a,document.getElementById("completionRate").textContent=t?(a/t*100).toFixed(1)+"%":"0%"}let h;function K(e){h&&h();const n=B(y(g,"tasks"),x("userId","==",e.uid),w("createdAt","desc"));h=R(n,()=>{_(e)},t=>{console.error("Error with realtime listener:",t)})}window.updateStatus=async function(e,n){if(!l.currentUser)return;const a=b(g,"tasks",e);await H(a,{status:n})};window.deleteTask=async function(e){if(!l.currentUser)return;confirm("Are you sure you want to delete this task?")&&await q(b(g,"tasks",e))};function J(e,n){const t=luxon.DateTime,a=t.fromISO(e),o=t.now(),s=a.diff(o,"milliseconds").milliseconds;s>0&&setTimeout(()=>{new Notification(`Reminder: ${n}`,{body:`Task "${n}" is due soon!`})},s-6e4)}function X(e){switch(e){case"High":return'<span class="text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full bg-red-100 text-red-800">High</span>';case"Medium":return'<span class="text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full bg-yellow-100 text-yellow-800">Medium</span>';case"Low":return'<span class="text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full bg-green-100 text-green-800">Low</span>';default:return""}}
